<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="2021/02/06/%E5%88%B7%E9%A2%98%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
      <url>2021/02/06/%E5%88%B7%E9%A2%98%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="各种数值类型的范围"><a href="#各种数值类型的范围" class="headerlink" title="各种数值类型的范围"></a>各种数值类型的范围</h3><h3 id="常见边界情况"><a href="#常见边界情况" class="headerlink" title="常见边界情况"></a>常见边界情况</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2021/02/05/pat%E7%94%B2%E7%BA%A71002/"/>
      <url>2021/02/05/pat%E7%94%B2%E7%BA%A71002/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PAT甲级1009多项式相乘</title>
      <link href="2021/02/05/pat%E7%94%B2%E7%BA%A71009/"/>
      <url>2021/02/05/pat%E7%94%B2%E7%BA%A71009/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#1-input-specification">1. Input Specification</a></li><li><a href="#2-output-specification">2. Output Specification</a></li><li><a href="#3-sample-input">3. Sample Input</a></li><li><a href="#4-sample-output">4. Sample Output</a></li><li><a href="#5-%E9%A2%98%E7%9B%AE%E5%A4%A7%E6%84%8F">5. 题目大意</a></li><li><a href="#6-%E6%B3%A8%E6%84%8F">6. 注意</a></li></ul><p>This time, you are supposed to find A*B where A and B are two polynomials.</p><h3 id="1-Input-Specification"><a href="#1-Input-Specification" class="headerlink" title="1. Input Specification"></a>1. Input Specification</h3><p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial: K N1 aN1 N2 aN2 … NK aNK, where K is the number of nonzero terms in the polynomial, Ni and aNi (i=1, 2, …, K) are the exponents and coefficients, respectively. It is given that 1 &lt;= K &lt;= 10, 0 &lt;= NK &lt; … &lt; N2 &lt; N1 &lt;=1000.</p><h3 id="2-Output-Specification"><a href="#2-Output-Specification" class="headerlink" title="2. Output Specification"></a>2. Output Specification</h3><p>For each test case you should output the product of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate up to 1 decimal place.</p><h3 id="3-Sample-Input"><a href="#3-Sample-Input" class="headerlink" title="3. Sample Input"></a>3. Sample Input</h3><p>2 1 2.4 0 3.2<br>2 2 1.5 1 0.5</p><h3 id="4-Sample-Output"><a href="#4-Sample-Output" class="headerlink" title="4. Sample Output"></a>4. Sample Output</h3><p>3 3 3.6 2 6.0 1 1.6</p><h3 id="5-题目大意"><a href="#5-题目大意" class="headerlink" title="5. 题目大意"></a>5. 题目大意</h3><p>给出两个多项式A和B，求A*B的结果</p><h3 id="6-注意"><a href="#6-注意" class="headerlink" title="6. 注意"></a>6. 注意</h3><p>错因：c开了1010。应该开2000+<br>方法：用数组下标作为幂次，用数组元素存储系数</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  PAT 甲 1009多项式乘积.cpp</span></span><br><span class="line"><span class="comment">//  Fushi</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by H C on 2021/2/5.</span></span><br><span class="line"><span class="comment">//  题目链接：https://pintia.cn/problem-sets/994805342720868352/problems/994805509540921344</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 错因：c开了1010。应该开2000+</span></span><br><span class="line"><span class="comment">// 方法：用数组下标作为幂次，用数组元素存储系数</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> a[<span class="number">1010</span>]={<span class="number">0</span>};</span><br><span class="line"><span class="keyword">double</span> b[<span class="number">1010</span>]={<span class="number">0</span>};</span><br><span class="line"><span class="keyword">double</span> c[<span class="number">2010</span>]={<span class="number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> K1,K2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;K1);</span><br><span class="line">    <span class="keyword">while</span> (K1--) {</span><br><span class="line">        <span class="keyword">int</span> N;</span><br><span class="line">        <span class="keyword">double</span> A;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %lf"</span>,&amp;N,&amp;A);</span><br><span class="line">        a[N] = A;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;K2);</span><br><span class="line">    <span class="keyword">while</span> (K2--) {</span><br><span class="line">        <span class="keyword">int</span> N;</span><br><span class="line">        <span class="keyword">double</span> B;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %lf"</span>,&amp;N,&amp;B);</span><br><span class="line">        b[N] = B;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1010</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (a[i]!=<span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">1010</span>; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(b[j]!=<span class="number">0</span>) {c[i+j] += a[i]*b[j];}</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2010</span>; i&gt;=<span class="number">0</span>; i--) {</span><br><span class="line">        <span class="keyword">if</span>(c[i]!=<span class="number">0</span>) count++;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,count);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2010</span>; i&gt;=<span class="number">0</span>; i--) {</span><br><span class="line">        <span class="keyword">if</span> (c[i]!=<span class="number">0</span>) {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" %d %.1lf"</span>,i,c[i]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT 甲级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多项式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT乙级1028人口普查</title>
      <link href="2021/02/05/pat%E4%B9%99%E7%BA%A71028/"/>
      <url>2021/02/05/pat%E4%B9%99%E7%BA%A71028/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#1-input-specification">1. Input Specification</a></li><li><a href="#2-output-specification">2. Output Specification</a></li><li><a href="#3-sample-input">3. Sample Input</a></li><li><a href="#4-sample-output">4. Sample Output</a></li><li><a href="#5-%E9%A2%98%E7%9B%AE%E5%A4%A7%E6%84%8F">5. 题目大意</a></li><li><a href="#6-%E6%B3%A8%E6%84%8F">6. 注意</a></li><li><a href="#7-%E6%96%B9%E6%B3%95%E4%B8%80%E7%BB%93%E6%9E%84%E4%BD%93%E5%AD%98%E5%82%A8%E9%87%8D%E5%86%99%E6%AF%94%E8%BE%83%E5%87%BD%E6%95%B0">7. 方法一（结构体存储，重写比较函数）</a></li><li><a href="#8-%E6%96%B9%E6%B3%95%E4%BA%8C%E6%97%A5%E6%9C%9F%E5%93%88%E5%B8%8C">8. 方法二（日期哈希）</a></li><li><a href="#9-%E6%96%B9%E6%B3%95%E4%B8%89string%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F">9. 方法三（String处理日期）</a></li></ul><p>某城镇进行人口普查，得到了全体居民的生日。现请你写个程序，找出镇上最年长和最年轻的人。<br>这里确保每个输入的日期都是合法的，但不一定是合理的——假设已知镇上没有超过 200 岁的老人，而今天是 2014 年 9 月 6 日，所以超过 200 岁的生日和未出生的生日都是不合理的，应该被过滤掉。</p><h1 id="1-Input-Specification"><a href="#1-Input-Specification" class="headerlink" title="1. Input Specification"></a>1. Input Specification</h1><p>输入在第一行给出正整数 N，取值在(0,10^5]；随后 N 行，每行给出 1 个人的姓名（由不超过 5 个英文字母组成的字符串）、以及按 yyyy/mm/dd（即年/月/日）格式给出的生日。题目保证最年长和最年轻的人没有并列。</p><h1 id="2-Output-Specification"><a href="#2-Output-Specification" class="headerlink" title="2. Output Specification"></a>2. Output Specification</h1><p>在一行中顺序输出有效生日的个数、最年长人和最年轻人的姓名，其间以空格分隔。</p><h1 id="3-Sample-Input"><a href="#3-Sample-Input" class="headerlink" title="3. Sample Input"></a>3. Sample Input</h1><p>5<br>John 2001/05/12<br>Tom 1814/09/06<br>Ann 2121/01/30<br>James 1814/09/05<br>Steve 1967/11/20</p><h1 id="4-Sample-Output"><a href="#4-Sample-Output" class="headerlink" title="4. Sample Output"></a>4. Sample Output</h1><p>3 Tom John</p><h1 id="5-题目大意"><a href="#5-题目大意" class="headerlink" title="5. 题目大意"></a>5. 题目大意</h1><p>筛选合法日期后，输出合法日期数，最大最小日期的人的名称</p><h1 id="6-注意"><a href="#6-注意" class="headerlink" title="6. 注意"></a>6. 注意</h1><ul><li>未考虑边界情况 一个身份都不合理 </li><li>数组少开了个0</li></ul><h1 id="7-方法一（结构体存储，重写比较函数）"><a href="#7-方法一（结构体存储，重写比较函数）" class="headerlink" title="7. 方法一（结构体存储，重写比较函数）"></a>7. 方法一（结构体存储，重写比较函数）</h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  PAT乙级1028人口普查.cpp</span></span><br><span class="line"><span class="comment">//  Fushi</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by H C on 2021/2/5.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//错因：1、未考虑边界情况 一个身份都不合理 2、数组少开了个0</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">people</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">6</span>];</span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">}peo;</span><br><span class="line"></span><br><span class="line">peo persons[<span class="number">100010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge_unreasonable</span><span class="params">(<span class="keyword">int</span> y,<span class="keyword">int</span> m,<span class="keyword">int</span> d)</span></span>{</span><br><span class="line">    <span class="keyword">if</span>(y&gt;<span class="number">2014</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(y==<span class="number">2014</span>&amp;&amp;m&gt;<span class="number">9</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(y==<span class="number">2014</span>&amp;&amp;m==<span class="number">9</span>&amp;&amp;d&gt;<span class="number">6</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(y&lt;<span class="number">1814</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(y==<span class="number">1814</span>&amp;&amp;m&lt;<span class="number">9</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(y==<span class="number">1814</span>&amp;&amp;m==<span class="number">9</span>&amp;&amp;d&lt;<span class="number">6</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(peo A,peo B)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(A.year!=B.year) <span class="keyword">return</span> A.year&lt;B.year;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(A.month!=B.month) <span class="keyword">return</span> A.month&lt;B.month;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> A.day&lt;B.day;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;N; i++) {</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">6</span>];</span><br><span class="line">        <span class="keyword">int</span> y,m,d;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d/%d/%d"</span>,name,&amp;y,&amp;m,&amp;d);</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="built_in">judge_unreasonable</span>(y, m, d);</span><br><span class="line">        <span class="keyword">if</span>(!flag)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">strcpy</span>(persons[count].name, name);</span><br><span class="line">            persons[count].year = y;</span><br><span class="line">            persons[count].month = m;</span><br><span class="line">            persons[count].day = d;</span><br><span class="line">            count++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">sort</span>(persons, persons+count, cmp);</span><br><span class="line"><span class="comment">//    边界</span></span><br><span class="line">    <span class="keyword">if</span>(count!=<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %s %s"</span>,count,persons[<span class="number">0</span>].name,persons[count<span class="number">-1</span>].name);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="8-方法二（日期哈希）"><a href="#8-方法二（日期哈希）" class="headerlink" title="8. 方法二（日期哈希）"></a>8. 方法二（日期哈希）</h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  PAT乙级1028人口普查.cpp</span></span><br><span class="line"><span class="comment">//  Fushi</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by H C on 2021/2/5.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//错因：1、未考虑边界情况 一个身份都不合理 2、数组少开了个0</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> MAX=<span class="number">18140906</span>,MIN=<span class="number">20140906</span>;</span><br><span class="line">    string MAX_name,MIN_name;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    {</span><br><span class="line">        string name;</span><br><span class="line">        <span class="keyword">int</span> y,m,d;</span><br><span class="line">        cin&gt;&gt;name;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d/%d/%d"</span>,&amp;y,&amp;m,&amp;d);</span><br><span class="line">        <span class="keyword">int</span> tmp = y*<span class="number">10000</span>+m*<span class="number">100</span>+d;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> (tmp&lt;=<span class="number">20140906</span>&amp;&amp;tmp&gt;=<span class="number">18140906</span>) {</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span> (tmp&gt;=MAX) {</span><br><span class="line">                MAX = tmp;</span><br><span class="line">                MAX_name = name;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (tmp&lt;=MIN) {</span><br><span class="line">                MIN = tmp;</span><br><span class="line">                MIN_name = name;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (cnt==<span class="number">0</span>) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %s %s"</span>,cnt,MIN_name.<span class="built_in">c_str</span>(),MAX_name.<span class="built_in">c_str</span>());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="9-方法三（String处理日期）"><a href="#9-方法三（String处理日期）" class="headerlink" title="9. 方法三（String处理日期）"></a>9. 方法三（String处理日期）</h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  PAT乙级1028人口普查.cpp</span></span><br><span class="line"><span class="comment">//  Fushi</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by H C on 2021/2/5.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//错因：1、未考虑边界情况 一个身份都不合理 2、数组少开了个0</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    string MAX_name,MIN_name;</span><br><span class="line">    string MAX = <span class="string">"1814/09/06"</span>,MIN = <span class="string">"2014/09/06"</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    {</span><br><span class="line">        string name,tmp;</span><br><span class="line">        cin&gt;&gt;name&gt;&gt;tmp;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> (tmp&lt;=<span class="string">"2014/09/06"</span>&amp;&amp;tmp&gt;=<span class="string">"1814/09/06"</span>) {</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span> (tmp&gt;=MAX) {</span><br><span class="line">                MAX = tmp;</span><br><span class="line">                MAX_name = name;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (tmp&lt;=MIN) {</span><br><span class="line">                MIN = tmp;</span><br><span class="line">                MIN_name = name;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (cnt==<span class="number">0</span>) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %s %s"</span>,cnt,MIN_name.<span class="built_in">c_str</span>(),MAX_name.<span class="built_in">c_str</span>());</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT 乙级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日期 结构体模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT乙级1031查验身份证</title>
      <link href="2021/02/01/pat%E4%B9%99%E7%BA%A71031/"/>
      <url>2021/02/01/pat%E4%B9%99%E7%BA%A71031/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#1-%E9%A2%98%E7%9B%AE">1. 题目</a><ul><li><a href="#11-%E8%BE%93%E5%85%A5%E6%A0%BC%E5%BC%8F">1.1. 输入格式</a></li><li><a href="#12-%E8%BE%93%E5%87%BA%E6%A0%B7%E4%BE%8B">1.2. 输出样例</a></li><li><a href="#13-%E8%BE%93%E5%85%A5%E6%A0%B7%E4%BE%8B1">1.3. 输入样例1</a></li><li><a href="#14-%E8%BE%93%E5%87%BA%E6%A0%B7%E4%BE%8B1">1.4. 输出样例1</a></li></ul></li><li><a href="#2-%E6%80%9D%E8%B7%AF">2. 思路</a></li><li><a href="#3-%E6%B3%A8%E6%84%8F">3. 注意</a></li><li><a href="#4-code">4. code</a></li></ul><h1 id="1-题目"><a href="#1-题目" class="headerlink" title="1. 题目"></a>1. 题目</h1><p>一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下：<br>首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值Z；最后按照以下关系对应Z值与校验码M的值：  </p><p>Z：0 1 2 3 4 5 6 7 8 9 10<br>M：1 0 X 9 8 7 6 5 4 3 2</p><p>现在给定一些身份证号码，请你验证校验码的有效性，并输出有问题的号码。</p><h2 id="1-1-输入格式"><a href="#1-1-输入格式" class="headerlink" title="1.1. 输入格式"></a>1.1. 输入格式</h2><p>输入第一行给出正整数N（≤100）是输入的身份证号码的个数。随后N行，每行给出1个18位身份证号码。</p><h2 id="1-2-输出样例"><a href="#1-2-输出样例" class="headerlink" title="1.2. 输出样例"></a>1.2. 输出样例</h2><p>按照输入的顺序每行输出1个有问题的身份证号码。这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。如果所有号码都正常，则输出All passed。</p><h2 id="1-3-输入样例1"><a href="#1-3-输入样例1" class="headerlink" title="1.3. 输入样例1"></a>1.3. 输入样例1</h2><p>4<br>320124198808240056<br>12010X198901011234<br>110108196711301866<br>37070419881216001X</p><h2 id="1-4-输出样例1"><a href="#1-4-输出样例1" class="headerlink" title="1.4. 输出样例1"></a>1.4. 输出样例1</h2><p>12010X198901011234<br>110108196711301866<br>37070419881216001X</p><h1 id="2-思路"><a href="#2-思路" class="headerlink" title="2. 思路"></a>2. 思路</h1><p>首先用int数组存权重，用string存校验码，如果身份证非纯数字则输出，如果身份证前17位权重%11不等于最后Z对应的M值则输出。若全部身份证符合要求，则输出All passed。</p><h1 id="3-注意"><a href="#3-注意" class="headerlink" title="3. 注意"></a>3. 注意</h1><ul><li>数字字符向数字的转换  数字字符-‘0’=数字</li></ul><h1 id="4-code"><a href="#4-code" class="headerlink" title="4. code"></a>4. code</h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 错误示范</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> quan[<span class="number">17</span>] = {<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>};</span><br><span class="line">    string jiaoyan = <span class="string">"10X98765432"</span>;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    cin&gt;&gt;N;</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;N; i++)</span><br><span class="line">    {</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">        string s;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">17</span>;j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(s[j]&lt;<span class="string">'0'</span>||s[j]&gt;<span class="string">'9'</span>) {cout&lt;&lt;s&lt;&lt;endl;flag=<span class="literal">true</span>;<span class="keyword">break</span>;}</span><br><span class="line">            sum += (s[j]-<span class="string">'0'</span>)*quan[j];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="literal">false</span>&amp;&amp;jiaoyan[sum%<span class="number">11</span>]!=s[<span class="number">17</span>]){cout&lt;&lt;s&lt;&lt;endl;flag=<span class="literal">true</span>;}</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="literal">false</span>) cout&lt;&lt;<span class="string">"All passed"</span>&lt;&lt;endl;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT 乙级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT甲级1031</title>
      <link href="2021/02/01/*pat%E7%94%B2%E7%BA%A71031/"/>
      <url>2021/02/01/*pat%E7%94%B2%E7%BA%A71031/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#1-question">1. Question</a><ul><li><a href="#11-input-specification">1.1. Input Specification:</a></li><li><a href="#12-output-specification">1.2. Output Specification</a></li><li><a href="#13-sample-input">1.3. Sample Input</a></li><li><a href="#14-sample-output">1.4. Sample Output</a></li></ul></li><li><a href="#2-%E9%A2%98%E7%9B%AE%E5%A4%A7%E6%84%8F">2. 题目大意</a></li><li><a href="#3-code">3. code</a></li></ul><h1 id="1-Question"><a href="#1-Question" class="headerlink" title="1. Question"></a>1. Question</h1><p>Given any string of N (≥5) characters, you are asked to form the characters into the shape of U. For example, helloworld can be printed as:</p><p>h    d<br>e    l<br>l    r<br>lowo</p><p>That is, the characters must be printed in the original order, starting top-down from the left vertical line with n1 characters, then left to right along the bottom line with n2 characters, and finally bottom-up along the vertical line with n3 characters. And more, we would like U to be as squared as possible — that is, it must be satisfied that n1 = n3 = max { k| k &lt;= n2 for all 3 &lt;= n2 &lt;= N } with n1 + n2 + n3 – 2 = N.</p><h2 id="1-1-Input-Specification"><a href="#1-1-Input-Specification" class="headerlink" title="1.1. Input Specification:"></a>1.1. Input Specification:</h2><p>Each input file contains one test case. Each case contains one string with no less than 5 and no more than 80 characters in a line. The string contains no white space.</p><h2 id="1-2-Output-Specification"><a href="#1-2-Output-Specification" class="headerlink" title="1.2. Output Specification"></a>1.2. Output Specification</h2><p>For each test case, print the input string in the shape of U as specified in the description.</p><h2 id="1-3-Sample-Input"><a href="#1-3-Sample-Input" class="headerlink" title="1.3. Sample Input"></a>1.3. Sample Input</h2><p>helloworld!</p><h2 id="1-4-Sample-Output"><a href="#1-4-Sample-Output" class="headerlink" title="1.4. Sample Output"></a>1.4. Sample Output</h2><p>h   !<br>e   d<br>l   l<br>lowor</p><h1 id="2-题目大意"><a href="#2-题目大意" class="headerlink" title="2. 题目大意"></a>2. 题目大意</h1><p>用所给字符串按U型输出。n1和n3是左右两条竖线从上到下的字符个数，n2是底部横线从左到右的字符个数。要求：</p><ol><li>n1 == n3</li><li>n2 &gt;= n1</li><li>n1为在满足上述条件的情况下的最大值</li></ol><h1 id="3-code"><a href="#3-code" class="headerlink" title="3. code"></a>3. code</h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  PAT 甲 1031.cpp</span></span><br><span class="line"><span class="comment">//  Fushi</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by H C on 2021/2/8.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    string s;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line"><span class="comment">//    由于gets()在pat中无法通过编译，故通过定义string使用getline(cin,s)函数</span></span><br><span class="line">    <span class="keyword">int</span> len = (<span class="keyword">int</span>)s.<span class="built_in">length</span>();</span><br><span class="line">    <span class="keyword">int</span> n1=<span class="number">0</span>,n2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">3</span>; i&lt;=len; i++) {<span class="comment">//i为n2上限</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=i; j++) {<span class="comment">//j为n1与n3上限</span></span><br><span class="line">            <span class="keyword">if</span> ((<span class="number">2</span>*j+i<span class="number">-2</span>==len)&amp;&amp;j&gt;max) {</span><br><span class="line">                max = j;</span><br><span class="line">                n1 = j;</span><br><span class="line">                n2 = i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n1<span class="number">-1</span>; i++) {<span class="comment">//输出n1行数据</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,s[i]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n2<span class="number">-2</span>; j++) {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c\n"</span>,s[len<span class="number">-1</span>-i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n2; i++) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,s[n1+i<span class="number">-1</span>]);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT 甲级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打印图形 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT甲级1006</title>
      <link href="2021/02/01/pat%E7%94%B2%E7%BA%A71006/"/>
      <url>2021/02/01/pat%E7%94%B2%E7%BA%A71006/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#1-question">1. Question</a><ul><li><a href="#11-input-specification">1.1. Input Specification:</a></li><li><a href="#12-output-specification">1.2. Output Specification</a></li><li><a href="#13-sample-input">1.3. Sample Input</a></li><li><a href="#14-sample-output">1.4. Sample Output</a></li></ul></li><li><a href="#2-thinking">2. Thinking</a></li><li><a href="#3-code">3. code</a></li></ul><h1 id="1-Question"><a href="#1-Question" class="headerlink" title="1. Question"></a>1. Question</h1><p>At the beginning of every day, the first person who signs in the computer room will unlock the door, and the last one who signs out will lock the door. Given the records of signing in’s and out’s, you are supposed to find the ones who have unlocked and locked the door on that day.</p><h2 id="1-1-Input-Specification"><a href="#1-1-Input-Specification" class="headerlink" title="1.1. Input Specification:"></a>1.1. Input Specification:</h2><p>Each input file contains one test case. Each case contains the records for one day. The case starts with a positive integer M, which is the total number of records, followed by M lines, each in the format:</p><p>ID_number Sign_in_time Sign_out_time</p><p>where times are given in the format HH:MM:SS, and ID_number is a string with no more than 15 characters.</p><h2 id="1-2-Output-Specification"><a href="#1-2-Output-Specification" class="headerlink" title="1.2. Output Specification"></a>1.2. Output Specification</h2><p>For each test case, output in one line the ID numbers of the persons who have unlocked and locked the door on that day. The two ID numbers must be separated by one space.</p><p>Note: It is guaranteed that the records are consistent. That is, the sign in time must be earlier than the sign out time for each person, and there are no two persons sign in or out at the same moment.</p><h2 id="1-3-Sample-Input"><a href="#1-3-Sample-Input" class="headerlink" title="1.3. Sample Input"></a>1.3. Sample Input</h2><p>3<br>CS301111 15:30:28 17:00:10<br>SC3021234 08:00:00 11:25:25<br>CS301133 21:45:00 21:58:40</p><h2 id="1-4-Sample-Output"><a href="#1-4-Sample-Output" class="headerlink" title="1.4. Sample Output"></a>1.4. Sample Output</h2><p>SC3021234 CS301133</p><h1 id="2-Thinking"><a href="#2-Thinking" class="headerlink" title="2. Thinking"></a>2. Thinking</h1><p>时间哈希</p><h1 id="3-code"><a href="#3-code" class="headerlink" title="3. code"></a>3. code</h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  PAT甲级1006.cpp</span></span><br><span class="line"><span class="comment">//  Fushi</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by H C on 2021/2/6.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="keyword">char</span> id[<span class="number">16</span>];</span><br><span class="line">    <span class="keyword">char</span> earid[<span class="number">16</span>];</span><br><span class="line">    <span class="keyword">char</span> lateid[<span class="number">16</span>];</span><br><span class="line">    <span class="keyword">int</span> eartime = <span class="number">86400</span>;</span><br><span class="line">    <span class="keyword">int</span> latetime = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line"><span class="comment">//    scanf后面如果接</span></span><br><span class="line"><span class="comment">//    getchar();</span></span><br><span class="line">    <span class="keyword">while</span> (N--) {</span><br><span class="line">        <span class="keyword">int</span> h1,m1,s1,h2,m2,s2;</span><br><span class="line"><span class="comment">//        不能用gets 不然把后面的数字也读到字符数组里了</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d:%d:%d %d:%d:%d"</span>,id,&amp;h1,&amp;m1,&amp;s1,&amp;h2,&amp;m2,&amp;s2);</span><br><span class="line">        <span class="keyword">int</span> tmp1 = <span class="number">3600</span>*h1+m1*<span class="number">60</span>+s1;</span><br><span class="line">        <span class="keyword">int</span> tmp2 = <span class="number">3600</span>*h2+m2*<span class="number">60</span>+s2;</span><br><span class="line">        <span class="keyword">if</span>(tmp1&lt;eartime) {eartime = tmp1;<span class="built_in">strcpy</span>(earid,id);}</span><br><span class="line">        <span class="keyword">if</span>(tmp2&gt;latetime) {latetime = tmp2;<span class="built_in">strcpy</span>(lateid,id);}</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s %s"</span>,earid,lateid);</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT 甲级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时间哈希 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT乙级1030完美数列</title>
      <link href="2021/01/25/pat%E4%B9%99%E7%BA%A71030/"/>
      <url>2021/01/25/pat%E4%B9%99%E7%BA%A71030/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#1-%E9%A2%98%E7%9B%AE">1. 题目</a></li><li><a href="#2-%E6%80%9D%E8%B7%AF">2. 思路</a></li><li><a href="#3-%E6%B3%A8%E6%84%8F">3. 注意</a></li><li><a href="#4-code">4. code</a></li></ul><h1 id="1-题目"><a href="#1-题目" class="headerlink" title="1. 题目"></a>1. 题目</h1><p>给定一个正整数数列，和正整数p，设这个数列中的最大值是M，最小值是m，如果M &lt;= m * p，则称这个数列是完美数列。<br>现在给定参数p和一些正整数，请你从中选择尽可能多的数构成一个完美数列。<br>输入格式：<br>输入第一行给出两个正整数N和p，其中N（&lt;= 10^5）是输入的正整数的个数，p（&lt;= 10^9）是给定的参数。第二行给出N个正整数，每个数不超过10^9。<br>输出格式：<br>在一行中输出最多可以选择多少个数可以用它们组成一个完美数列。</p><p>输入样例：<br>10 8<br>2 3 20 4 5 1 6 7 8 9</p><p>输出样例：<br>8</p><h1 id="2-思路"><a href="#2-思路" class="headerlink" title="2. 思路"></a>2. 思路</h1><p>首先将数列从小到大排序，设当前结果为max = 1，当前最长长度为temp = 1；从i = 0～n，j从i + max到n，【因为是为了找最大的max，所以下一次j只要从i的max个后面开始找】每次计算temp若大于max则更新max，最后输出max的值</p><h1 id="3-注意"><a href="#3-注意" class="headerlink" title="3. 注意"></a>3. 注意</h1><ul><li>m*p有可能超出int表示范围 用long long声明p</li><li>采用相当于滑动窗口的形式减少查找次数</li></ul><h1 id="4-code"><a href="#4-code" class="headerlink" title="4. code"></a>4. code</h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误示范 未考虑注意中的两点</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n,p;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;p;</span><br><span class="line">    <span class="keyword">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    {</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">sort</span>(a, a+n);</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(a[i]*p &lt; a[j]) <span class="keyword">break</span>;</span><br><span class="line">            temp++;</span><br><span class="line">            <span class="keyword">if</span>(temp&gt;max) max = temp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout&lt;&lt;max&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://res.cloudinary.com/dq1yc7tiz/image/upload/v1612534485/PAT%E4%B9%99%E7%BA%A7/PAT%E4%B9%99%E7%BA%A71030_%E9%94%99%E8%AF%AF_az3mma.png" alt="PAT乙级1030"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//AC代码</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> p; <span class="comment">//long long</span></span><br><span class="line">    cin&gt;&gt;n&gt;&gt;p;</span><br><span class="line">    <span class="keyword">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    {</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">sort</span>(a, a+n);</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">1</span>,temp = <span class="number">1</span>; <span class="comment">//temp不能放进单层循环内</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+max;j&lt;n;j++) <span class="comment">//是max不是temp</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(a[i]*p &lt; a[j]) <span class="keyword">break</span>;</span><br><span class="line">            temp++;</span><br><span class="line">            <span class="keyword">if</span>(temp&gt;max) max = temp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout&lt;&lt;max&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT 乙级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 查找 </tag>
            
            <tag> 滑动窗口优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT甲级1002多项式相加</title>
      <link href="2021/01/25/pat%E7%94%B2%E7%BA%A71002/"/>
      <url>2021/01/25/pat%E7%94%B2%E7%BA%A71002/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#1-input">1. Input</a></li><li><a href="#2-output">2. Output</a></li><li><a href="#3-sample-input">3. Sample Input</a></li><li><a href="#4-sample-output">4. Sample Output</a></li><li><a href="#5-%E9%A2%98%E7%9B%AE%E5%A4%A7%E6%84%8F">5. 题目大意</a></li><li><a href="#6-%E5%88%86%E6%9E%90">6. 分析</a></li><li><a href="#7-code">7. Code</a></li></ul><p>This time, you are supposed to find A+B where A and B are two polynomials.</p><h3 id="1-Input"><a href="#1-Input" class="headerlink" title="1. Input"></a>1. Input</h3><p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial: K N1 aN1 N2 aN2 … NK aNK, where K is the number of nonzero terms in the polynomial, Ni and aNi (i=1, 2, …, K) are the exponents and coefficients, respectively. It is given that 1 &lt;= K &lt;= 10，0 &lt;= NK &lt; … &lt; N2 &lt; N1 &lt;=1000.</p><h3 id="2-Output"><a href="#2-Output" class="headerlink" title="2. Output"></a>2. Output</h3><p>For each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.</p><h3 id="3-Sample-Input"><a href="#3-Sample-Input" class="headerlink" title="3. Sample Input"></a>3. Sample Input</h3><p>2 1 2.4 0 3.2<br>2 2 1.5 1 0.5</p><h3 id="4-Sample-Output"><a href="#4-Sample-Output" class="headerlink" title="4. Sample Output"></a>4. Sample Output</h3><p>3 2 1.5 1 2.9 0 3.2</p><h3 id="5-题目大意"><a href="#5-题目大意" class="headerlink" title="5. 题目大意"></a>5. 题目大意</h3><p>计算多项式A+B的和</p><h3 id="6-分析"><a href="#6-分析" class="headerlink" title="6. 分析"></a>6. 分析</h3><p>设立c数组，长度为指数的最大值，c[i] = j表示指数i的系数为j，接收a和b输入的同时将对应指数的系数加入到c中，累计c中所有非零系数的个数，然后从后往前输出所有系数不为0的指数和系数</p><h3 id="7-Code"><a href="#7-Code" class="headerlink" title="7. Code"></a>7. Code</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  PAT 甲 1002A+B多项式.cpp</span></span><br><span class="line"><span class="comment">//  Fushi</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by H C on 2021/2/5.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> a[<span class="number">1010</span>]={<span class="number">0</span>};</span><br><span class="line"><span class="keyword">double</span> b[<span class="number">1010</span>]={<span class="number">0</span>};</span><br><span class="line"><span class="keyword">double</span> c[<span class="number">1010</span>]={<span class="number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> K1,K2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;K1);</span><br><span class="line">    <span class="keyword">while</span> (K1--) {</span><br><span class="line">        <span class="keyword">int</span> N;</span><br><span class="line">        <span class="keyword">double</span> A;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %lf"</span>,&amp;N,&amp;A);</span><br><span class="line">        a[N] = A;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;K2);</span><br><span class="line">    <span class="keyword">while</span> (K2--) {</span><br><span class="line">        <span class="keyword">int</span> N;</span><br><span class="line">        <span class="keyword">double</span> B;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %lf"</span>,&amp;N,&amp;B);</span><br><span class="line">        b[N] = B;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1010</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (a[i]!=<span class="number">0</span>||b[i]!=<span class="number">0</span>) {</span><br><span class="line">            c[i] = a[i]+b[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1010</span>; i&gt;=<span class="number">0</span>; i--) {</span><br><span class="line">        <span class="keyword">if</span>(c[i]!=<span class="number">0</span>) count++;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,count);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1010</span>; i&gt;=<span class="number">0</span>; i--) {</span><br><span class="line">        <span class="keyword">if</span> (c[i]!=<span class="number">0</span>) {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" %d %.1lf"</span>,i,c[i]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT 甲级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多项式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/25/hello-world/"/>
      <url>2021/01/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
